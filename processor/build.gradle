plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
}

group 'jez-kotlin'
version '1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // arg parsing
    compile 'com.xenomachina:kotlin-argparser:2.0.7'

    // networking
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    // Kafka
    implementation 'org.apache.kafka:kafka-clients:2.0.0'
    
    // data serialization
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.6'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.6'

    // logging
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'org.slf4j:slf4j-log4j12:1.7.25'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task fatJar (type: Jar){
    manifest {
        attributes 'Main-Class': 'MainKt'
    }
    // This line of code recursively collects and copies all of a project's files/ and adds them to the JAR itself.
    // One can extend this task, to skip certain files or particular types at will
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}